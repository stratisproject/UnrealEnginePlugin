// Copyright Â© 2022 Stratis Platform.
//
// This file is part of Stratis Plugin for Unreal Engine. The full copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

/**
 * Stratis Node API
 * Access to the Stratis Node's api.
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "BaseModel.h"

namespace stratis {
namespace api {

bool HttpRetryManager::Tick(float DeltaTime)
{
    FManager::Update();
    return true;
}

HttpRetryParams::HttpRetryParams(const FRetryLimitCountSetting& InRetryLimitCountOverride /*= FRetryLimitCountSetting()*/,
                                 const FRetryTimeoutRelativeSecondsSetting& InRetryTimeoutRelativeSecondsOverride /*= FRetryTimeoutRelativeSecondsSetting()*/,
                                 const FRetryResponseCodes& InRetryResponseCodes /*= FRetryResponseCodes()*/,
                                 const FRetryVerbs& InRetryVerbs /*= FRetryVerbs()*/,
                                 const FRetryDomainsPtr& InRetryDomains /*= FRetryDomainsPtr() */)
    : RetryLimitCountOverride(InRetryLimitCountOverride), RetryTimeoutRelativeSecondsOverride(InRetryTimeoutRelativeSecondsOverride), RetryResponseCodes(InRetryResponseCodes), RetryVerbs(InRetryVerbs), RetryDomains(InRetryDomains)
{
}

void Response::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
    ResponseCode = InHttpResponseCode;
    SetSuccessful(EHttpResponseCodes::IsOk(InHttpResponseCode));
    if (InHttpResponseCode == EHttpResponseCodes::RequestTimeout) {
        SetResponseString(TEXT("Request Timeout"));
    }
}

} // namespace api
} // namespace stratis
